#include "Vector.h"

class matriz {
	private :
		//dimenciones para la matriz
		int f; //fila
		int c; //columnas
		char m[100][100];
		//metodos modificadores
		void setFilas(int _filas);
		void setColumnas(int _columnas);
		void setElemento(int _filas,int _columnas,char _valor);

		//metdos consultores
		int getFilas();
		int getColumnas();
		char getElemento(int _fila,int _columna);


	public:
		matriz();
		matriz (int _fila, int _columna);
		__property int Filas    = { write=setColumnas, read=getColumnas };
		__property int Columnas = { write=setFilas, read=getFilas	};
		__property char Casilla[int f][int c] =
		{	write=setElemento, read=getElemento};
		void  cargarMatriz ();
		//char getCaracter (int posf, int posc);
		/*void  setFilas(int _fila);
		void  setColumnas(int _columna);
		void setElemento(int _fila, int _columna, char _valor);

		int   getFilas();
		int   getColumnas();
		char  getElemento(int _fila, int _columna);     */
		void  cargarPalabrasMatriz(PVector palabra);  //clase matriz
		void  limpiarMatriz();



		bool  chocaPalabra(String formaCarga,int f,int c,int cletras);



};

//////////////////////////  M E T O D O S  //////////////////////////////////////

matriz::matriz(){
	f=0;
	c=0;
}

matriz::matriz(int _fila, int _columna)
{
  f=_fila;
  c=_columna;
}

//////////////////  M E T O D O S   M O D I F I C A D O R E S  /////////////////

void matriz::setFilas(int _fila){
	f=_fila;
}

void matriz::setColumnas(int _columna){
	c= _columna;
}

void matriz::setElemento(int _fila, int _columna, char _valor){
	if (_fila<f && _columna<c){
		m[_fila][_columna]= _valor;
	}
}

//----------------------------------------------------------------------------//

////////////////////  M E T O D O S   C O N S U L T O R E S  ///////////////////

int matriz::getFilas(){
	return f;
}

int matriz::getColumnas(){
	return c;
}

char matriz:: getElemento(int _fila, int _columna){
	if (_fila<f && _columna<c){
		return m[_fila][_columna];
	}


}
//----------------------------------------------------------------------------//
void matriz::cargarMatriz ()
{
	char abecedario[] ="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	srand(time(NULL));//metodo "" que nos permite iniciar la funcion rand
	for (int i=0; i<f; i++){      //filas   f

		for (int j=0; j<c; j++ ){ //columnas  c


				int num_rand= 0+rand ()% 26;

				m[i][j]= abecedario[num_rand];

		}
	}
}

void matriz::cargarPalabrasMatriz(PVector palabras){
  srand(time(NULL));
  //para cargar tolas palabras dentro de la matriz
  for(int i=0;i<palabras.getN();i++){

		String palabra = palabras.getPalabra(i);

		int cantidadLetras = palabra.Length();

		int posc = 0+rand() % c;
		int posf = 0+rand() % f;
											  //  cuantos son:
		int columnasDisponibles= c - posc;      //  las columnas disponibles
		int filasDisponibles   = f - posf;      //  las filas disponibles

		int formaCarga = 0 + rand()% 2 ; // genera un numero entre 0y1
		String forma="";
		if(formaCarga == 0 ){// si genero-0-horizontal
			forma="horizontal";
		}

		if(formaCarga == 1){// si genero-1-Vertical
			forma="vertical";
		}

	// LA FORMA PARA CARGAR LA PALABRA HORIZONTALMENTE
	if((columnasDisponibles >= cantidadLetras && forma=="horizontal")||(filasDisponibles >= cantidadLetras && forma=="vertical")){
	 // if(chocaPalabra(forma,posf,posc,cantidadLetras)== false){
			 ShowMessage(forma);
				if(forma=="horizontal"){

				//este for sirve para cargar las letras de forma horizontal
					 for(int j=1;j<=cantidadLetras;j++){

					   m[posf][posc]=palabra[j];
					   posc++;
					 }

				}

				if(forma=="vertical"){

				 //este for sirve para cargar las letras de forma vertical
					 for(int j=1;j<=cantidadLetras;j++){

					   m[posf][posc]=palabra[j];
					   posf++;
					 }

				}


	   //	}else{
	   //		i--;
	   //	  }

	} else{
	 i--;
	}

  }
}



void matriz::limpiarMatriz()
{
	 for(int i=0;i<f;i++)
	 {
	   for(int j=0;j<c;j++)
	   {
		  m[i][j]=' ';
	   }
	 }
}

bool matriz::chocaPalabra(String formaCarga,int fil,int col,int cletras)
{
  bool resultado=false;
  if(formaCarga=="horizontal")
  {
 // ShowMessage("choca palabra" + formaCarga);
	   for(int i=col;i<col+cletras;i++)
	   {
			if( m[fil][i] != ' ')
			{
			  resultado=true;
			}
	   }

  }

  if(formaCarga=="vertical")
  {// ShowMessage("choca vertical "+formaCarga);
	   for(int i=fil;i<fil+cletras;i++)
	   {
			if( m[i][col] != ' ')
			{
			  resultado=true;
			}
	   }

  }

  return resultado;


}
